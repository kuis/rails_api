
#list-tools
  .pull-left
    = button_to 'Add Task', new_task_path, {method: :get, remote: true, class: 'btn btn-primary', :id => 'new-task-btn'} if (params[:scope] == 'user' && can?(:create_my, Task)) || (params[:scope] == 'teams' && can?(:create_team, Task))
  .text-right
    .dropdown.btn-download.task-download
      a.btn.dropdown-toggle href="#" data-toggle="dropdown" data-target="#" title="Download"
        i.icon-download
        i.icon-arrow-down-small
      ul.dropdown-menu.download-options-menu role="menu" aria-labelledby="dLabel"
        li
          a#xls-export.xlsx-download-link href="#" role="menuitem" data-url="#{url_for(action: :index, scope: params[:scope], format: :xls)}"
            | Download as XLS
        li
          a#pdf-export.xlsx-download-link href="#" role="menuitem" data-url="#{url_for(action: :index, scope: params[:scope], format: :pdf)}"
            | Download as PDF
    .tasks-progress-bar

div#tasks-list.resource-list

javascript:
  $('#collection-list-filters').filteredList({
    'source': '#{source}',
    'filtersUrl': '#{filter_url("#{params[:scope]}_tasks")}',
    'listContainer' : '#tasks-list',
    'sorting': 'due_at',
    'sorting_dir': 'asc',
    'includeCalendars': true,
    'calendarHighlights': #{calendar_highlights.to_json.html_safe},
    'selectDefaultDate': false,
    'ytdDatesRange': '#{current_company.ytd_dates_range}',
    'includeSearchBox': false,
    'includeAutoComplete': true,
    'autoCompletePath': '#{autocomplete_path("#{params[:scope]}_tasks", format: :json)}',
    'defaultParams': '#{j default_params_for_view('status[]=Active')}',
    'applyTo': '#{controller_name}',
    'userFilters': #{user_saved_filters(controller_name).to_json.html_safe},
    'emptyStateMessage': '#{j t("#{params[:scope]}_tasks.empty.line1", scope: :blank_states) }',
    'emptyStateMessageLine2': '#{j t("#{params[:scope]}_tasks.empty.line2.with#{can?(:create, Event) ? '' : 'out'}_create_permissions", scope: :blank_states) }',
    'emptyFilterResultsMessage': '#{j t("#{params[:scope]}_tasks.filters.line1", default: :filters_line1, scope: :blank_states) }',
    'emptyFilterResultsMessageLine2': '#{j t("#{params[:scope]}_tasks.filters.line2", default: :filters_line2, scope: :blank_states) }',
    'onItemsLoad': function(response, page){
      if (response.find('div[data-content="counters"]').length > 0){
        $('.tasks-progress-bar').html(response.find('div[data-content="counters"]'));
      }
    },
    'onItemsChange': function(response, page){
      var taskId = document.location.hash.replace(/^#comments\-([0-9]+)/, '$1');
      if (taskId){
        $('li#task_'+taskId+' .load-comments-link').click();
      }
    },
    'onPageLoaded' : function() {
      if ($("ul.task-navigation li.active").attr('id') === 'mine_tasks') {
        $('#xls-export').data('url', '/tasks/mine.xls');
        $('#pdf-export').data('url', '/tasks/mine.pdf');
      } else {
        $('#xls-export').data('url', '/tasks/my_teams.xls');
        $('#pdf-export').data('url', '/tasks/my_teams.pdf?scope=teams');
      }
    }
  });
