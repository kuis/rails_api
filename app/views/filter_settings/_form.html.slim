- apply_to = params[:apply_to]
- settings = FilterSetting::SETTINGS[apply_to]
= simple_form_for(resource, remote: true) do |f|
  = f.hidden_field :apply_to, as: :hidden, value: apply_to
  = f.hidden_field :id, as: :hidden

  = f.error_notification

  .form-inputs
    - if settings.present?
      = f.hidden_field 'settings[]', as: :hidden, value: nil
      - CompanyUser::FILTER_SETTINGS_TYPES.each do |type|
        .row-fluid
          .span12
            = filter_setting_checkbox(type, apply_to, resource.settings)
      - settings.each do |setting_item|
        = hidden_field_tag 'filter_setting[settings][]', FilterSetting.setting_key(setting_item, apply_to, 'present')

    .row-fluid.saved-filters
      .span12
        h6 SAVED FILTERS
        = render partial: 'custom_filters/custom_filters', locals: {apply_to: apply_to}

  .form-actions
    - if settings.present?
      = f.button :submit, "Done", class: 'btn-primary', data: {disable_with: 'Please wait...'}
      = "&nbsp;".html_safe
      = f.button :button, 'Cancel', class: 'btn-cancel'
    - else
      = f.button :submit, "Done", class: 'btn-primary', data: {dismiss: 'modal'}
