- submit_link = false
- if can?(:submit, resource) && resource.may_submit?
  - submit_link = link_to 'submit', submit_event_path(format: :js), method: :put, remote: true

//Date in the future
- if resource.in_future? && !resource.happens_today?
  .alert.alert-grey
    = describe_before_event_alert(resource)

  - late_tasks = resource.tasks.late.count
  - today_tasks = resource.tasks.due_today.count

  - if today_tasks > 0
    .alert.alert-danger
      == "Your event has #{pluralize(late_tasks, 'late task')} and #{pluralize(today_tasks, 'task')} that are due today. <a href=\"#event-tasks\" class=\"smooth-scroll\">Click here</a> to complete."
  - else
    - if late_tasks > 0
      .alert.alert-danger
        == "Your event has #{pluralize(late_tasks, 'late task')}. <a href=\"#event-tasks\"  class=\"smooth-scroll\">Click here</a> to complete."

    - if (today_tasks = resource.tasks.due_today.count) > 0
      .alert.alert-gray
        == "Your event has #{(today_tasks > 1) ? today_tasks.to_s+' tasks that are' : ' one task that is'} due today. <a href=\"#event-tasks\" class=\"smooth-scroll\">Click here</a> to complete."

//Event is happening today
- elsif resource.happens_today? && resource.unsent?
  .alert.alert-grey
    = describe_today_event_alert(resource)
    - if submit_link
      == " Once complete, please #{submit_link} your post event form."

//Event is due
- elsif !resource.is_late? and resource.unsent?
  .alert.alert-grey
    = describe_due_event_alert(resource)
    - if submit_link
      == " Once complete, please #{submit_link} your post event form."

//Event is late
- elsif resource.unsent?
  .alert.alert-danger
    = describe_late_event_alert(resource)
    - if submit_link
      == " Once complete, please #{submit_link} your post event form."

- elsif resource.approved?
  .alert.alert-success
    == "Your post event report has been approved."

- elsif resource.rejected?
  .alert.alert-danger
    - resubmit_link = link_to 'resubmit', submit_event_path(format: :js), method: :put, remote: true
    == "Your post event report form has been rejected for the following reasons:"
    br>/
    p #{resource.reject_reason}
    - if can?(:edit_data, resource) && can?(:submit, resource)
      p Please make the necessary changes and #{resubmit_link}.

- else
  .alert.alert-info.submitted
    - approve_link = link_to 'approve', approve_event_path, method: :put
    - reject_link = link_to 'reject', reject_event_path, class: 'reject-post-event', method: :put, remote: true
    == "Your post event report has been submitted for approval."
    - if can?(:approve, resource)
      == " Please review and either #{approve_link} or #{reject_link}."