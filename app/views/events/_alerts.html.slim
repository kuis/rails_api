- submit_link = false
- if can?(:submit, resource) && (resource.unsent? || resource.rejected?)
  - submit_link = link_to 'submit', submit_event_path(format: :js), class: 'submit-event-data-link', method: :put, remote: true, data: { disable_with: 'submitting'}
r
// Event is scheduled on a place that is not longer part of the campaign
- unless resource.place.nil? || resource.campaign.place_allowed_for_event?(resource.place)
  .alert.alert-danger
    == "Your event's location is no longer part of the campaign's approved places."
    - allowed_actions = []
    - allowed_actions.push "#{link_to('edit the event', edit_event_path(resource), remote: true)} and update the location" if can?(:edit, resource)
    - allowed_actions.push "#{link_to('modify the places', campaign_path(resource.campaign, anchor: "campaign-places-list"))} for the campaign" if can?(:show, resource.campaign) && can?(:add_place, resource.campaign)
    == " You may need to #{allowed_actions.join(' or ')}." if allowed_actions.any?

//Date in the future
- if resource.in_future? && !resource.happens_today?
  .alert.alert-grey
    = describe_before_event_alert(resource)

  - late_tasks = resource.tasks.late.count
  - today_tasks = resource.tasks.due_today.count

  - if today_tasks > 0
    .alert.alert-danger
      == "Your event has #{pluralize(late_tasks, 'late task')} and #{pluralize(today_tasks, 'task')} that are due today. <a href=\"#event-tasks\" class=\"smooth-scroll\">Click here</a> to complete."
  - else
    - if late_tasks > 0
      .alert.alert-danger
        == "Your event has #{pluralize(late_tasks, 'late task')}. <a href=\"#event-tasks\"  class=\"smooth-scroll\">Click here</a> to complete."

    - if today_tasks > 0
      .alert.alert-gray
        == "Your event has #{(today_tasks > 1) ? today_tasks.to_s+' tasks that are' : ' one task that is'} due today. <a href=\"#event-tasks\" class=\"smooth-scroll\">Click here</a> to complete."

//Event is happening today
- elsif resource.happens_today? && resource.unsent?
  .alert.alert-grey
    = describe_today_event_alert(resource)
    - if submit_link
      == " Once complete, please #{submit_link} your post event form."

//Event is due
- elsif !resource.is_late? and resource.unsent?
  .alert.alert-grey
    = describe_due_event_alert(resource)
    - if submit_link
      == " Once complete, please #{submit_link} your post event form."

//Event is late
- elsif resource.unsent?
  .alert.alert-danger
    = describe_late_event_alert(resource)
    - if submit_link
      == " Once complete, please #{submit_link} your post event form."

- elsif resource.approved?
  .alert.alert-success
    == "Your post event report has been approved."

- elsif resource.rejected?
  .alert.alert-danger
    - resubmit_link = link_to 'resubmit', submit_event_path(format: :js), class: 'submit-event-data-link', method: :put, remote: true, data: { disable_with: 'resubmitting'}
    == "Your post event report form has been rejected for the following reasons:"
    br>/
    p #{resource.reject_reason}
    - if can?(:edit_data, resource) && can?(:submit, resource)
      p Please make the necessary changes and #{resubmit_link}.

- else
  .alert.alert-info.submitted
    - approve_link = link_to 'approve', approve_event_path(:return => @return), method: :put
    - reject_link = link_to 'reject', reject_event_path(:return => @return), class: 'reject-post-event', method: :put, remote: true
    == "Your post event report has been submitted for approval."
    - if can?(:approve, resource)
      == " Please review and either #{approve_link} or #{reject_link}."