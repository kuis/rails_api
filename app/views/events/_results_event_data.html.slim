- event_data = resource.event_data

.row-fluid
  .box_summary
    h3 SUMMARY
    = link_to '', edit_data_event_path(resource), remote: true, id: 'edit-event-data-btn', class: 'edit', title: 'Edit event data' if can?(:edit_data, resource)
    .summary-content= resource.summary

  - if event_data
    .box_metrics.pull-right
      ul.consumer-reach-metrics
        - if active_kpis.include?(Kpi.impressions)
          li
            = kpi_goal_progress_bar(resource.kpi_goals[Kpi.impressions.id], event_data.impressions)
            div.metric
              span= number_with_delimiter(event_data.impressions)
              = (event_data.impressions == 1 ? " Impression" : " Impressions")

        - if active_kpis.include?(Kpi.interactions)
          li
            = kpi_goal_progress_bar(resource.kpi_goals[Kpi.interactions.id], event_data.interactions)
            div.metric
              span= number_with_delimiter(event_data.interactions.round)
              = " Influenced"

        - if active_kpis.include?(Kpi.samples)
          li
            = kpi_goal_progress_bar(resource.kpi_goals[Kpi.samples.id], event_data.samples)
            div.metric
              span= number_with_delimiter(event_data.samples.round)
              = " Sampled"

        - if active_kpis.include?(Kpi.expenses)
          li
            = kpi_goal_progress_bar(resource.kpi_goals[Kpi.expenses.id], event_data.spent)
            div.metric
              span= number_to_currency(event_data.spent, precision: 2)
              = " Spent"

      - if active_kpis.include?(Kpi.expenses)
        ul.consumer-reach-metrics.pull-right
          - if active_kpis.include?(Kpi.impressions) && event_data.spent.present? && event_data.impressions > 0
            li
              div.metric
                span= number_to_currency(event_data.spent / event_data.impressions, precision: 2)
                = " / Impression"

          - if active_kpis.include?(Kpi.interactions) && event_data.spent.present? && event_data.interactions > 0
            li
              div.metric
                span= number_to_currency(event_data.spent / event_data.interactions, precision: 2)
                = " / Influence"

          - if active_kpis.include?(Kpi.samples) && event_data.spent.present? && event_data.interactions > 0
            li
              div.metric
                span= number_to_currency(event_data.spent / event_data.samples, precision: 2)
                = " / Sample"
      ul.consumer-reach-metrics.pull-right
        - if active_kpis.include?(Kpi.photos)
          - photo_count = resource.photos.count
          li
            div.metric
              span= photo_count
              = " Photos"
            = kpi_goal_progress_bar(resource.kpi_goals[Kpi.photos.id], photo_count)

        - if active_kpis.include?(Kpi.surveys)
          - surveys_count = resource.surveys.count
          li
            div.metric
              span= surveys_count
              = " Surveys"
            = kpi_goal_progress_bar(resource.kpi_goals[Kpi.surveys.id], surveys_count)

      ul.consumer-reach-metrics.pull-right
        - custom_kpis.each do |custom_kpi|
          - if custom_kpi.kpi_type = 'number'
            - custom_kpi_value = resource.results.find_by_kpi_id(custom_kpi.id).try(:value)
            li
              div.metric
                span= (custom_kpi.capture_mechanism == 'currency' ? number_to_currency(custom_kpi_value, precision: 2) : custom_kpi_value)
                = ' ' + custom_kpi.name

- if event_data
  .row-fluid
    .span6
      - if active_kpis.include?(Kpi.gender) && resource.demographics_graph_data[:gender].present?
        #gender-graph.row-fluid
          = gender_graph(resource.demographics_graph_data[:gender])

      - if active_kpis.include?(Kpi.age)
        .row-fluid
          #age-graph

    .span6
      - if active_kpis.include?(Kpi.ethnicity)
        #ethnicity-graph


- if event_data
  javascript:
    $('#age-graph').highcharts({
        chart: { type: 'bar' },
        title: { text: null },
        colors: ['#DFDFDF','#3E9CCF'],
        xAxis: {
            categories: #{resource.demographics_graph_data[:age].keys.to_json.html_safe},
            title: {
                enabled: false
            },
            labels: {
              style: {color: '#3E9CCF'}
            },
            tickLength: 0,
            lineWidth: 0
        },
        tooltip: {enabled: false},
        yAxis: {
            max: 100,
            labels: { enabled: false },
            title: {text: false},
            gridLineColor: 'transparent',
            enabled: false
        },
        plotOptions: {
            bar: {
                dataLabels: {
                    enabled: false
                }
            },
            series: {
                stacking: 'percent',
                enableMouseTracking: false,
                pointPadding: 0,
                groupPadding: 0,
                borderWidth: 0,
                pointPadding: 0,
                pointWidth: 15,
                dataLabels: {
                    color: '#3E9CCF'
                }
            }
        },
        legend: { enabled: false },
        credits: { enabled: false },
        series: [{
            name: 'Fill in',
            data: #{resource.demographics_graph_data[:age].values.map{|v|(100-v).round}.to_json.html_safe},

        },{
            name: 'Values',
            data: #{resource.demographics_graph_data[:age].values.map(&:round).to_json.html_safe},
            dataLabels: {
                    enabled: true,
                    format: '{y}%',
                    color: '#3E9CCF',
                    align: 'right',
                    x: 30,
                    y: -2,
                    style: { color: '#3E9CCF' }
                }

        }]
    });

    if (#{resource.demographics_graph_data[:ethnicity].values.max} > 0) {
        $('#ethnicity-graph').highcharts({
              colors: ['#B1D7EC', '#8CC5E3', '#65B0D8', '#3D9DD0'],
              chart: {
                  type: 'pie'
              },
              title: { text: null },
              credits: { enabled: false },
              yAxis: {
                  title: { text: null }
              },
              plotOptions: {
                  pie: {
                      shadow: false
                  },
                  series: {
                    enableMouseTracking: false,
                  }
              },
              tooltip: {
                  enabled: false
              },
              series: [{
                  name: 'Ethnicity',
                  data: #{resource.demographics_graph_data[:ethnicity].map{|k,v|[k, v.round]}.to_json.html_safe},
                  size: '60%',
                  innerSize: '30%',
                  distance: -10,
                  dataLabels: {
                      crop: false,
                      formatter: function() {
                          // display only if larger than 1
                          return '<span style="font-size:15px;">'+ this.y +'%</span><br /><div style="width: 50px">'+ this.point.name+'</div>';
                      },
                      color: '#3E9CCF'
                  }
              }]
        });
    }

    $(document).on('areas:change', function(){
      $.get('#{areas_venue_path(resource, format: :js)}');
    });
