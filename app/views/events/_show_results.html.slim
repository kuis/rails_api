- active_kpis = resource.campaign.active_kpis
- event_data = resource.event_data

.details_box
  - if active_kpis.include?(Kpi.photos)
    = render 'photos'

  - if event_data
    .row-fluid
      .box_summary
        h3 SUMMARY
        = resource.summary
      .box_metrics.pull-right
        ul.consumer-reach-metrics
          - if active_kpis.include?(Kpi.impressions)
            li
              div.metric
                span= event_data.impressions
                = (event_data.impressions == 1 ? " Impression" : " Impressions")
              - if resource.kpi_goals[Kpi.impressions.id].present?
                div.progress
                  .bar style="width: #{event_data.impressions*100/resource.kpi_goals[Kpi.impressions.id]}%"

          - if active_kpis.include?(Kpi.interactions)
            li
              div.metric
                span= number_with_delimiter(event_data.interactions.round)
                = " Influenced"
              - if resource.kpi_goals[Kpi.interactions.id].present?
                div.progress
                  .bar style="width: #{event_data.interactions*100/resource.kpi_goals[Kpi.interactions.id]}%"

          - if active_kpis.include?(Kpi.samples)
            li
              div.metric
                span= number_with_delimiter(event_data.samples.round)
                = " Sampled"
              - if resource.kpi_goals[Kpi.samples.id].present?
                div.progress
                  .bar style="width: #{event_data.samples*100/resource.kpi_goals[Kpi.samples.id]}%"

          - if active_kpis.include?(Kpi.expenses)
            li
              div.metric
                span= number_to_currency(event_data.spent, precision: 0)
                = " Spent"
              - if resource.kpi_goals[Kpi.expenses.id].present?
                div.progress
                  .bar style="width: #{event_data.spent*100/resource.kpi_goals[Kpi.expenses.id]}%"

            - if active_kpis.include?(Kpi.photos)
              - photo_count = resource.photos.count
              li
                div.metric
                  span= photo_count
                  = " Photos"
                - if resource.kpi_goals[Kpi.photos.id].present?
                  div.progress
                    .bar style="width: #{photo_count*100/resource.kpi_goals[Kpi.photos.id]}%"

            li
              div.metric
                span= resource.surveys.count
                = " Surveys"
        ul.consumer-reach-metrics.pull-right
          - if event_data.spent.present? && event_data.impressions > 0
            li
              div.metric
                span= number_to_currency(event_data.spent / event_data.impressions, precision: 2)
                = " / Impression"

          - if event_data.spent.present? && event_data.interactions > 0
            li
              div.metric
                span= number_to_currency(event_data.spent / event_data.interactions, precision: 2)
                = " / Influence"

          - if event_data.spent.present? && event_data.interactions > 0
            li
              div.metric
                span= number_to_currency(event_data.spent / event_data.samples, precision: 2)
                = " / Sample"

    .row-fluid
      .span6
        - if resource.demographics_graph_data[:gender].present?
          #gender-graph.row-fluid
            .span4.male
              .percent
                = "#{resource.demographics_graph_data[:gender].try(:[],'Male').try(:round) || 0} %"
              .gender MALE
            .span4.female
              .percent
                = "#{resource.demographics_graph_data[:gender].try(:[],'Female').try(:round) || 0} %"
              .gender FEMALE
        .row-fluid
          #age-graph
      .span6
        #ethnicity-graph

  - if active_kpis.include?(Kpi.surveys)
    = render 'results_surveys'

  - if resource.campaign.active_field_types.include?('comments')
    = simple_form_for resource do |f|
      = render partial: 'comments', locals: {f: f}

javascript:
  $(document).ready(function() {
    $(this).scrollTop(400);
  });

- if event_data
  javascript:
    $('#age-graph').highcharts({
        chart: { type: 'bar' },
        title: { text: null },
        colors: ['#DFDFDF','#3E9CCF'],
        xAxis: {
            categories: #{resource.demographics_graph_data[:age].keys.to_json.html_safe},
            title: {
                enabled: false
            },
            labels: {
              style: {color: '#3E9CCF'}
            },
            tickLength: 0,
            lineWidth: 0
        },
        tooltip: {enabled: false},
        yAxis: {
            max: 100,
            labels: { enabled: false },
            title: {text: false},
            gridLineColor: 'transparent',
            enabled: false
        },
        plotOptions: {
            bar: {
                dataLabels: {
                    enabled: false
                }
            },
            series: {
                stacking: 'percent',
                enableMouseTracking: false,
                pointPadding: 0,
                groupPadding: 0,
                borderWidth: 0,
                pointPadding: 0,
                pointWidth: 15,
                dataLabels: {
                    color: '#3E9CCF'
                }
            }
        },
        legend: { enabled: false },
        credits: { enabled: false },
        series: [{
            name: 'Fill in',
            data: #{resource.demographics_graph_data[:age].values.map{|v|(100-v).round}.to_json.html_safe},

        },{
            name: 'Values',
            data: #{resource.demographics_graph_data[:age].values.map(&:round).to_json.html_safe},
            dataLabels: {
                    enabled: true,
                    format: '{y}%',
                    color: '#3E9CCF',
                    align: 'right',
                    x: 30,
                    y: -2,
                    style: { color: '#3E9CCF' }
                }

        }]
    });

    if (#{resource.demographics_graph_data[:ethnicity].values.max} > 0) {
        $('#ethnicity-graph').highcharts({
              colors: ['#B1D7EC', '#8CC5E3', '#65B0D8', '#3D9DD0'],
              chart: {
                  type: 'pie'
              },
              title: { text: null },
              credits: { enabled: false },
              yAxis: {
                  title: { text: null }
              },
              plotOptions: {
                  pie: {
                      shadow: false
                  },
                  series: {
                    enableMouseTracking: false,
                  }
              },
              tooltip: {
                  enabled: false
              },
              series: [{
                  name: 'Ethnicity',
                  data: #{resource.demographics_graph_data[:ethnicity].map{|k,v|[k, v.round]}.to_json.html_safe},
                  size: '60%',
                  innerSize: '30%',
                  distance: -10,
                  dataLabels: {
                      crop: false,
                      formatter: function() {
                          // display only if larger than 1
                          return '<span style="font-size:15px;">'+ this.y +'%</span><br /><div style="width: 50px">'+ this.point.name+'</div>';
                      },
                      color: '#3E9CCF'
                  }
              }]
        });
    }

    $(document).on('areas:change', function(){
      $.get('#{areas_venue_path(resource, format: :js)}');
    });
