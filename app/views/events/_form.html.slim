- remote ||= false
- venue = parent if parent.present? && parent.is_a?(Venue)
= simple_form_for(@event, remote: remote || false) do |f|
  = f.hidden_field :visit_id
  .form-inputs.edit-event
    .chosen-campaign
      = f.association :campaign, collection: allowed_campaigns(venue), input_html: {class: 'chosen-enabled'}

    .row-fluid
      .span12
        .pull-left
          = f.input :start_date, label: 'Start', wrapper_html: { class: 'visit_event_start_date' } do
            .pull-left
              .event_start_date
                = f.input_field :start_date, :as => :date_picker, label: false
            .pull-left
              .event_start_time
                = f.input_field :start_time, :as => :time_picker, label: false
          end
        .to.pull-left to
        .pull-left
          = f.input :end_date, label: 'End', wrapper_html: { class: 'visit_event_end_date' } do
            .pull-left
              .event_end_date
                = f.input_field :end_date, :as => :date_picker, label: false
            .pull-left
              .event_end_time
                = f.input_field :end_time, :as => :time_picker, label: false
          end

    - if parent.is_a?(Venue)
        = f.hidden_field :place_reference, as: :hidden, value: parent.place_id
    - else
      .row-fluid.google-places
        = f.error :place
        = f.input :place_reference, :as => :location, label: 'Place', input_html: {display_value: params[:place_reference_display_name] || @event.place_name_with_location, placeholder: 'Search for places' }

    = f.input :description, input_html: { placeholder: 'Enter a short description of your event' }

    = f.input :team_members, label: 'Event staff' do
      = f.select :team_members, current_company.team_member_options , {}, class: 'input-xlarge chosen-enabled', multiple: true, 'data-placeholder' => " "

    - if params[:visit_id].present?
      = hidden_field_tag :visit_id, params[:visit_id]

  .form-actions
    = f.button :submit, class: 'btn btn-primary', data: {disable_with: 'Please wait...'}
    = "&nbsp;".html_safe
    = f.button :button, 'Cancel', class: 'btn btn-cancel'

javascript:
  val = $('#calendar_start_date').text();
  visitStartDate = "#{params[:visit_id] ? current_company.brand_ambassadors_visits.find(params[:visit_id]).start_date : ''}";
  visitEndDate = "#{params[:visit_id] ? current_company.brand_ambassadors_visits.find(params[:visit_id]).end_date : ''}";
  $('#event_start_date').datepicker({
    showOtherMonths: true,
    selectOtherMonths: true,
    dateFormat: "mm/dd/yy",
    defaultDate: $('#calendar_start_date').data('date'),
    minDate: visitStartDate,
    maxDate: visitEndDate,
    onClose: function( selectedDate ) {
      var pattern = /(\d{2})\/(\d{2})\/(\d{4})/;
      var prevDate = $('#event_start_date').data('previous-date');
      var startDate = $('#event_start_date').datepicker( "getDate" );
      var endDate = $('#event_end_date').datepicker( "getDate" );
      if (prevDate && endDate) {
        var diff =  Math.abs(endDate.getTime() - prevDate.getTime());
        var ed = new Date();
        ed.setTime(startDate.getTime() + diff)
        $('#event_end_date').datepicker("setDate", ed);
      }
      $('#event_start_date').data('previous-date', startDate);
    }
  }).data('previous-date',  $('#event_start_date').datepicker( "getDate" ));

  $('#event_end_date').datepicker({
    showOtherMonths: true,
    selectOtherMonths: true,
    dateFormat: "mm/dd/yy",
    minDate: visitStartDate,
    maxDate: visitEndDate
  });

  $('#event_start_time').on('change hideTimepicker', function(){
    var time = $('#event_start_time').timepicker('getTime')
    time.setHours(time.getHours()+1);
    $('#event_end_time').timepicker('setTime', time);
  });

  $('.modal .places-autocomplete').placesAutocomplete();


/ var input = $('.modal .places-autocomplete')[0];
/ var locationAutocomplete = new google.maps.places.Autocomplete(input);

/ google.maps.event.addListener(locationAutocomplete, 'place_changed', function() {
/   var place = locationAutocomplete.getPlace();
/   if (!place.geometry) {
/     return false;
/   }

/   $($(input).data('hidden')).val(place.reference+'||'+place.id);
/ });
