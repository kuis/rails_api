- remote ||= false
= simple_form_for(@event, remote: remote || false) do |f|

  .form-inputs.edit-event
    .chosen-campaign
      = f.association :campaign, collection: company_campaigns.active, input_html: {class: 'chosen-enabled'}

    .row-fluid
      .span6
        = f.input :start_date, :as => :date_picker
        = f.input :start_time, :as => :time_picker, inline: true

      span.to to

      .span6
        = f.input :end_date, :as => :date_picker
        = f.input :end_time, :as => :time_picker

    .row-fluid
      = f.error :place
      = f.input :place_reference, :as => :location, label: 'Place', input_html: {display_value: params[:place_reference_display_name] || @event.place_name_with_location, class: 'input-xxlarge'}

  .form-actions
    = f.button :submit, class: 'btn btn-primary', disable_with: 'Please wait...'
    = "&nbsp;".html_safe
    = f.button :button, 'Cancel', class: 'btn btn-cancel'

javascript:
  val = $('#calendar_start_date').text();
  $('#calendar_start_date').datepicker({
    altField: '#event_start_date',
    defaultDate: $('#calendar_start_date').data('date')
  });

  $('#calendar_end_date').datepicker({
    altField: '#event_end_date',
    defaultDate: $('#calendar_end_date').data('date')
  });

  var input = $('.modal .places-autocomplete')[0];
  var locationAutocomplete = new google.maps.places.Autocomplete(input);

  google.maps.event.addListener(locationAutocomplete, 'place_changed', function() {
    var place = locationAutocomplete.getPlace();
    if (!place.geometry) {
      return false;
    }

    $($(input).data('hidden')).val(place.reference+'||'+place.id);
  });