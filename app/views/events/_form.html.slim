- remote ||= false
- venue = parent if parent.present? && parent.is_a?(Venue)
= simple_form_for(@event, remote: remote || false) do |f|

  .form-inputs.edit-event
    .chosen-campaign
      = f.association :campaign, collection: allowed_campaigns(venue), input_html: {class: 'chosen-enabled'}

    .row-fluid
      .span12
        .pull-left
          = f.input :start_date, :as => :date_picker
        .pull-left
          = f.input :start_time, :as => :time_picker, inline: true
        .to.pull-left to
        .pull-left
          = f.input :end_date, :as => :date_picker
        .pull-left
          = f.input :end_time, :as => :time_picker, inline: true

    - if parent.is_a?(Venue)
        = f.hidden_field :place_reference, as: :hidden, value: parent.place_id
    - else
      .row-fluid.google-places
        = f.error :place
        = f.input :place_reference, :as => :location, label: 'Place', input_html: {display_value: params[:place_reference_display_name] || @event.place_name_with_location, class: 'input-xxlarge'}

  .form-actions
    = f.button :submit, class: 'btn btn-primary', disable_with: 'Please wait...'
    = "&nbsp;".html_safe
    = f.button :button, 'Cancel', class: 'btn btn-cancel'

javascript:
  val = $('#calendar_start_date').text();
  $('#calendar_start_date').datepicker({
    altField: '#event_start_date',
    defaultDate: $('#calendar_start_date').data('date')
  });

  $('#calendar_end_date').datepicker({
    altField: '#event_end_date',
    defaultDate: $('#calendar_end_date').data('date')
  });

  $('.modal .places-autocomplete').placesAutocomplete();


/ var input = $('.modal .places-autocomplete')[0];
/ var locationAutocomplete = new google.maps.places.Autocomplete(input);

/ google.maps.event.addListener(locationAutocomplete, 'place_changed', function() {
/   var place = locationAutocomplete.getPlace();
/   if (!place.geometry) {
/     return false;
/   }

/   $($(input).data('hidden')).val(place.reference+'||'+place.id);
/ });
