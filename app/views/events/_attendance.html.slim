- items = (resource.invites.active.joins(:place).select("invites.*, places.name") + resource.invites.active.joins(:area).select("invites.*, areas.name")).sort_by(&:name)

- if items.any?
  #resource-invites-list

    .dropdown.btn-download.pull-right
      a.btn.dropdown-toggle href="#" data-toggle="dropdown" data-target="#" title="Download"
        i.icon-download
        i.icon-arrow-down-small
      ul.dropdown-menu.download-options-menu role="menu" aria-labelledby="dLabel"
        - if resource.campaign.enabled_modules.include?('attendance') && Invite::ATTENDANCE_DISPLAY_BY_TYPES.try(:[], resource.campaign.module_setting('attendance', 'attendance_display')) == 'market'
          li
            = link_to 'Download individual to XLS', event_invites_path(resource, export_mode: :individual, format: :csv), role: :menuitem, class: 'xlsx-download-link', data: { url: event_invites_path(resource, export_mode: :individual, format: :csv) }
            = link_to 'Download aggregate to XLS', event_invites_path(resource, format: :csv), role: :menuitem, class: 'xlsx-download-link', data: { url: event_invites_path(resource, format: :csv) }
          li
            = link_to 'Download aggregate to PDF', event_invites_path(resource, format: :pdf), role: :menuitem, class: 'xlsx-download-link', data: { url: event_invites_path(resource, format: :pdf) }
        - else
          li
            = link_to 'Download as XLS', event_invites_path(resource, format: :csv), role: :menuitem, class: 'xlsx-download-link', data: { url: event_invites_path(resource, format: :csv) }
          li
            = link_to 'Download as PDF', event_invites_path(resource, format: :pdf), role: :menuitem, class: 'xlsx-download-link', data: { url: event_invites_path(resource, format: :pdf) }

    h5.module-title ATTENDANCE

    #invites-list.resource-list
      = render partial: 'invites/invite', collection: items, locals: { parent: resource }