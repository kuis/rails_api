- remote ||= false
= simple_form_for(@user, remote: remote || false) do |f|
  = f.error_notification

  .form-inputs
    .row-fluid
      .span6
        = f.input :first_name, input_html: {class: 'input-medium'}, :autofocus => true
      .span6
        = f.input :last_name, input_html: {class: 'input-medium'}
    .row-fluid
      = f.input :email
      - if resource.id == current_user.id
        = f.input :country, collection: Country.all, required: true
        = f.input :state, collection: (resource.country ? Country.new(resource.country).states.map{|k, info| [info['name'],k]} : []), required: true
        = f.input :city, required: true
      - if resource.id != current_user.id
        = f.association :teams, collection: Team.active.all, input_html: {class: 'input-large'}

        = f.simple_fields_for :company_users do |cf|
          = cf.input :role_id, as: :select, collection: current_company.roles

      - if resource.confirmed?
        = f.input :password
        = f.input :password_confirmation

  .form-actions
    = f.button :submit, input_html: {class: 'btn-primary'}
    = f.button :button, 'Cancel', class: 'btn-cancel'

javascript:
  $('#user_team_ids').select2();