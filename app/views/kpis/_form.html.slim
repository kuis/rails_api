- remote ||= false
= simple_form_for([parent, resource], remote: remote || false) do |f|
  = f.error_notification

  .form-inputs
    .row-fluid
      = f.input :name

    .row-fluid
      = f.input :kpi_type, input_html: {class: 'input-large'}, collection: Kpi::TYPE_OPTIONS.keys.map{|d| [d.capitalize, d]}

    .row-fluid
      = f.input :capture_mechanism, as: :select, input_html: {class: 'input-large'}, collection: []

    .row-fluid
      = f.input :description, :input_html => {:rows => 6}

  .form-actions
    = f.button :submit, class: 'btn-primary', disable_with: 'Please wait...'
    = "&nbsp;".html_safe
    = f.button :button, 'Cancel', class: 'btn-cancel'

javascript:
    var captureOptions = #{Kpi::TYPE_OPTIONS.to_json.html_safe}
    $('#kpi_kpi_type').change(function(){
      var capture = $('#kpi_capture_mechanism');
      capture.empty();
      var optionSelected = this.value;
      if (optionSelected) {
        options = captureOptions[optionSelected];
        for(var i = 0; i < options.length; i++) {
          capture.append($("<option/>", {
              value: options[i],
              text: options[i]
          }));
        }
      }
    });