#asset_upload_dialog
  = s3_uploader_form callback_url: url_for(action: :create, "#{parent.class.name.underscore}_id" => parent.to_param, format: :js), id: "s3_uploader", callback_param: "attached_asset[direct_upload_url]", expiration: 24.hours.from_now.utc.iso8601, max_file_size: 60.megabytes do

    .selecting-panel
      .row-fluid
        .span8
          p Select file(s) from your computer to upload.
          p.small Maximum upload size 60MB
        .span4
          span.btn.btn-primary.fileinput-button.pull-right
            span Browse Files
            = file_field_tag :file, multiple: true, 'data-no-uniform' => "true"

      .row-fluid.or-divider
        .span12
          .divider
            | OR

      .row-fluid.file-drag-drop
        .span12
          #drop-zone
            | Drag and drop file here to upload

    .uploading-panel
      #uploads_container

      .action-buttons
        a#btn-upload-ok.btn.btn-primary data-dismiss="modal" href="#" aria-hidden="true" OK
        span.btn.fileinput-button
          span Add more files
          = file_field_tag :file, multiple: true, 'data-no-uniform' => "true"
|
  <script id="template-upload" type="text/x-tmpl">
  <div id="upload_{%=o.unique_id%}" class="upload">
    <div class="progress active">
      <div class="bar" style="width: 0%">
      </div>
      <div class="upload-file-info">
        <div class="upload-file-icon"></div>
        <div class="upload-file-name">{%=o.name%}</div>
        <div class="upload-file-error">{%=o.name%}</div>
        <div class="upload-file-status"><i class="icon-ok-sign"></i></div>
      </div>
    </div>
  </div>
  </script>

javascript:
  $(function() {
    var assetsPath = #{Hash[Dir.glob("#{Rails.root}/app/assets/images/file-types/32px/*.png").map{ |image| name = image.split('/').last; ext = name.split('.').first; [ext, asset_path("file-types/32px/" + name)]; }].to_json.html_safe};
    $('#s3_uploader').S3Uploader(
      {
        remove_completed_progress_bar: false,
        progress_bar_target: $('#uploads_container'),
        before_add: function(file) {
          var file, image_types;
          image_types = /(\.|\/)(gif|jpe?g|png)$/i;

          if ('#{resource.asset_type}' != 'photo' || image_types.test(file.type) || image_types.test(file.name)) {
            return true;
          } else {
            return false;
          }
        }
      }
    ).bind('fileuploadprogress', function (e, data) {
      var progress = parseInt(data.loaded / data.total * 100, 10);
      data.context.find('.upload-file-status').text(progress+'%');
      if (!data._icon){
        var file_extension = data.files[0].name.split('.').pop().toLowerCase();
        if (file_extension == 'jpeg'){
          file_extension = 'jpg';
        }
        var icon = assetsPath._blank;
        if (typeof assetsPath[file_extension] != 'undefined') {
          icon = assetsPath[file_extension];
        }
        data._icon = data.context.find('.upload-file-icon').html($('<img src="'+icon+'">'));
      }
    }).bind('fileuploaddone', function (e, data) {
      data.context.addClass('complete').find('.upload-file-status').html($('<i class="icon-ok-sign"></i>'), $('<i class="icon-minus-sign"></i>'));
    });
    $('#s3_uploader').bind('s3_upload_failed', function(e, content) {
      return alert(content.filename + ' failed to upload');
    }).bind('s3_uploads_start', function() {
      $('#asset_upload_dialog').addClass('upload-started');
    });
  });


