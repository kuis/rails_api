.row-fluid
  = resource_details_bar("You are viewing venue details. Click to close.", collection_path)
  .venues_box
    - unless resource.latitude.nil?
      #venue-map-canvas.google-map data-latitude="#{resource.latitude}" data-longitude="#{resource.longitude}"
            b= resource.name
            br>/
            = place_address(resource.is_a?(Venue) ? resource.place : resource)

    h2= resource.name

    .row-fluid
      = resource.formatted_address
      br>/
      = resource.formatted_phone_number
      - if resource.website
        br>/
        = place_website(resource.website)
      br>/
      = resource.price_level.times.map{ '$' }.join
      = " "
      = resource.types_without_establishment.map{|type| t("venue_types.#{type}") }.join(', ')

      - if resource.persisted?
        = link_to '', select_areas_venue_path(resource), remote: true, class: 'add-area-venue icon-plus-sign'
        #venue-areas.row-fluid
          = render partial: 'areas', locals: {areas: resource.place.areas}
.venues_box
  - if resource.persisted? && resource.events > 0
    .venue-overall
      .row-fluid
        .span6
          #venue-score
            span= resource.score
            | VENUE SCORE
          #venue-score-narrative
            = venue_score_narrative(resource)

        .span6
          #overall-venue-stats.text-right
            span= resource.events
            = (resource.events == 1 ? " Event" : " Events")
            span.sparkline data-sparkline="bar" data-values="0,#{30.times.map{ 3 + Random.rand(6) }.join(',')}"
            br>/
            span.sparkline= resource.promo_hours
            = (resource.promo_hours == 1 ? " Promo Hour" : " Promo Hours")
            span.sparkline data-sparkline="bar" data-values="0,#{30.times.map{ 3 + Random.rand(6) }.join(',')}"
            br>/
            span= resource.impressions
            = (resource.impressions == 1 ? " Impression" : " Impressions")
            span.sparkline data-sparkline="bar" data-values="0,#{30.times.map{ 3 + Random.rand(6) }.join(',')}"
            br>/
            span= resource.interactions
            = " Influenced"
            span.sparkline data-sparkline="bar" data-values="0,#{30.times.map{ 3 + Random.rand(6) }.join(',')}"
            br>/
            span= resource.sampled
            = " Sampled"
            span.sparkline data-sparkline="bar" data-values="0,#{30.times.map{ 3 + Random.rand(6) }.join(',')}"
            br>/
            span= number_with_delimiter(resource.avg_impressions.round)
            = " Impressions/Event"
            span.sparkline data-sparkline="bar" data-values="0,#{30.times.map{ 3 + Random.rand(6) }.join(',')}"
            br>/
            span= number_with_delimiter(resource.avg_impressions_hour.round)
            = " Impressions/Promo Hour"
            span.sparkline data-sparkline="bar" data-values="0,#{30.times.map{ 3 + Random.rand(6) }.join(',')}"
            br>/
            span= number_to_currency(resource.avg_impressions_cost, precision: 0)
            = " Cost/Impression"
            span.sparkline data-sparkline="bar" data-values="0,#{30.times.map{ 3 + Random.rand(6) }.join(',')}"


  - if resource.persisted?
    .row-fluid
      .span6
        #gender-graph.row-fluid
          .span4.male
            .percent
              = "#{resource.overall_graphs_data[:gender].try(:[],'Male').try(:round) || 0} %"
            .gender MALE
          .span4.female
            .percent
              = "#{resource.overall_graphs_data[:gender].try(:[],'Female').try(:round) || 0} %"
            .gender FEMALE
        .row-fluid
          #overall-age-graph
      .span6
        #overall-ethnicity-graph

.venues_box
  h3 TRENDS BY DAY OF WEEK

.venues_box
  h3 GALLERY
  .venues-photo-list
    ul.thumbnails#photos-list
      - resource.photos.each do |photo|
        - if photo.is_a?(AttachedAsset)
          = render partial: 'photos/photo', locals: {photo: photo}
        - else
          li.span2.google-image
            div.thumbnail-container.thumbnail
              a.fancybox data-fancybox-type='image' href="https://maps.googleapis.com/maps/api/place/photo?maxheight=700&maxwidth=700&photoreference=#{photo[:photo_reference]}&sensor=true&key=#{GOOGLE_API_KEY}" rel='photo-gallery'
                = image_tag "https://maps.googleapis.com/maps/api/place/photo?maxwidth=180&photoreference=#{photo[:photo_reference]}&sensor=true&key=#{GOOGLE_API_KEY}"

.venues_box
  h3 COMMENTS
  - resource.reviews.each do |review|
    .venue-review
      - unless review.is_a?(Comment)
        .review-author-name= review.author_name
        .review-rating= rating_stars(review.rating)
        .review-date= time_ago_in_words(DateTime.strptime(review.time.to_s,'%s'))
        .review-text= review.text
      - else
        .review-author-name= review.user_full_name
        .review-date= time_ago_in_words(review.created_at)
        .review-text= review.content

- if resource.persisted?
  javascript:
    $(document).ready(function() {
      $(this).scrollTop(400);
    });
    $('#overall-age-graph').highcharts({
        chart: { type: 'bar' },
        title: { text: null },
        colors: ['#DFDFDF','#3E9CCF'],
        xAxis: {
            categories: #{resource.overall_graphs_data[:age].keys.to_json.html_safe},
            title: {
                enabled: false
            },
            labels: {
              style: {color: '#3E9CCF'}
            },
            tickLength: 0,
            lineWidth: 0
        },
        tooltip: {enabled: false},
        yAxis: {
            max: 100,
            labels: { enabled: false },
            title: {text: false},
            gridLineColor: 'transparent',
            enabled: false
        },
        plotOptions: {
            bar: {
                dataLabels: {
                    enabled: false
                }
            },
            series: {
                stacking: 'percent',
                enableMouseTracking: false,
                pointPadding: 0,
                groupPadding: 0,
                borderWidth: 0,
                pointPadding: 0,
                pointWidth: 15,
                dataLabels: {
                    color: '#3E9CCF'
                }
            }
        },
        legend: { enabled: false },
        credits: { enabled: false },
        series: [{
            name: 'Fill in',
            data: #{resource.overall_graphs_data[:age].values.map{|v|(100-v).round}.to_json.html_safe},

        },{
            name: 'Values',
            data: #{resource.overall_graphs_data[:age].values.map(&:round).to_json.html_safe},
            dataLabels: {
                    enabled: true,
                    format: '{y}%',
                    color: '#3E9CCF',
                    align: 'right',
                    x: 30,
                    y: -2,
                    style: { color: '#3E9CCF' }
                }

        }]
    });

    if (#{resource.overall_graphs_data[:ethnicity].values.max} > 0) {
        $('#overall-ethnicity-graph').highcharts({
              colors: ['#B1D7EC', '#8CC5E3', '#65B0D8', '#3D9DD0'],
              chart: {
                  type: 'pie'
              },
              title: { text: null },
              credits: { enabled: false },
              yAxis: {
                  title: { text: null }
              },
              plotOptions: {
                  pie: {
                      shadow: false
                  },
                  series: {
                    enableMouseTracking: false,
                  }
              },
              tooltip: {
                  enabled: false
              },
              series: [{
                  name: 'Ethnicity',
                  data: #{resource.overall_graphs_data[:ethnicity].map{|k,v|[k, v.round]}.to_json.html_safe},
                  size: '60%',
                  innerSize: '30%',
                  distance: -10,
                  dataLabels: {
                      crop: false,
                      formatter: function() {
                          // display only if larger than 1
                          return '<span style="font-size:15px;">'+ this.y +'%' +'</span><br /><div style="width: 50px">'+ this.point.name+'</div>';
                      },
                      color: '#3E9CCF'
                  }
              }]
        });
    }

    $(document).on('areas:change', function(){
      $.get('#{areas_venue_path(resource, format: :js)}');
    });
