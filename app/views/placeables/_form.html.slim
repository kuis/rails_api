.campaigns-modals
  p Add areas from the list below

  input type="text" name="q" id="place-search-box"
  #select-areas-table-wrapper
    .link-list
      ul#areas-list
        - @areas.each do |area|
          li id="area-#{area.id}"
            span.pull-left
              .area_name= area.name
              .area_description= area.description
            span.pull-right
              = link_to '', url_for({controller: :placeables, action: :add_area, "#{parent.class.name.underscore.downcase}_id" => parent.id, area: area.id}), remote: true, method: :post, enable_with: '...', class: 'add', title: 'Add Area' if area.active?
        li.empty-list-message
          p There are not assignable areas

    .row-fluid
      .span12
        .divider
          | OR

    p Search for places that you want to add

    = simple_form_for([parent, parent.places.new], remote: true) do |f|
      = f.error_notification

      .form-inputs
        .row-fluid
          .pull-left
            = f.input :reference, :as => :location, wrapper_html: {class: 'form-horizontal'}
          .pull-right
            = f.button :submit, 'Add Place', class: 'btn-primary add-place-btn', disable_with: 'Please wait...'

javascript:
  var input = $('.modal .places-autocomplete')[0];
  var locationAutocomplete = new google.maps.places.Autocomplete(input);

  google.maps.event.addListener(locationAutocomplete, 'place_changed', function() {
    var place = locationAutocomplete.getPlace();
    if (!place.geometry) {
      // Inform the user that the place was not found and return.
      alert('Place not found');
      return false;
    }

    $($(input).data('hidden')).val(place.reference+'||'+place.id);
  });

  $('#place-search-box').on('keyup', function () {
    var value = $(this).val();
    $("#areas-list > li:not(.empty-list-message)").each(function() {
      if ($(this).text().toLowerCase().search(value) > -1) {
        $(this).show();
      }
      else {
        $(this).hide();
      }
    });
  });