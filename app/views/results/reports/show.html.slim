- content_for :head
  = javascript_include_tag "jquery.reportBuilder"
  = javascript_include_tag "jquery.reportTableScroller"
- content_for :head
  = stylesheet_link_tag "reports"

= user_new_feature('reports_show') do
  h5 Getting Started: Custom Reports
  a.close.btn-dismiss-alert.icon.icon-close href="#" title="Dismiss"
  a.video-thumbnail href="#" title="Play Video" data-video="//www.youtube.com/embed/AKYC5mZgsEo?rel=0" data-width="640" data-height="360"
    img src="#{image_path('video_arrow.png')}" width="70" height="70" /
  .feature-description
    p
      'Custom Reports are reports that either you or your teammates created and shared. From this page you can filter the report’s results, expand and collapse the report’s various groupings, and export the report’s raw data to Excel. Click on the video to the left for a quick overview or check out our
      a> href="http://support.brandscopic.com" target="_blank" support site
      | for more in depth info.

#report-builder
  #resource-filter-column.sidebar style="#{resource.filters.empty? ? 'display: none' : ''}"
    #collection-list-filters

  .main.with-details-close-bar class="#{resource.filters.empty? ? 'no-margin' : ''}"
    = resource_details_bar("You are viewing #{resource.name} report. Click to close.")

    .pull-right
      - if resource.can_be_generated?
        button.btn.download.report-link data-url="#{results_report_path(resource, format: :csv)}" title="Download"

    - if can?(:edit, resource)
      .text-left
        = link_to 'Edit', build_results_report_path(resource), {class: 'btn btn-primary btn-edit-report', :id => 'edit-report-btn'}
    .clearfix

    #report-container
      = render partial: 'report_html', locals: { skip_report_rows: true }
    .report-loading-spinner

  .clearfix

= render partial: 'help_tutorial'

- content_for :footer
  javascript:
    $('#collection-list-filters').filteredList({
      'source': '#{rows_results_report_path}',
      'filtersUrl': '#{filters_results_report_path}',
      'listContainer' : 'table#report-table tbody',
      'onItemsLoad' : function(response, page) {
        $('table.report-table').show();
        if (response.find('thead').length > 0) {
          $('#report-table').find('thead').replaceWith(response.find('thead'))
          $('#report-table').reportTableScroller('rebuildHeader');
        }
        $('#report-table').reportTableScroller('adjustHeader');
        if ($('a.expand-all').hasClass('icon-collapse')) {
          response.find('tbody tr[data-level]').show()
          response.find('tbody tr[data-level] .icon-expand').removeClass('icon-expand').addClass('icon-collapse')
        }
      },
      'onBeforePageLoad': function(page) {
        if (page == 1) {
            $('table.report-table').hide();
        }
      },
      'onPageLoaded' : function(page, resultsCount) {
        //$('#report-table').reportTableScroller('adjustTableSize');
        $('#report-table').reportTableScroller('adjustHeader');
        $('#report-table').reportTableScroller('adjustTableSize');
        $('#report-table').reportTableScroller('resetScroller');
        if (page == 1 && resultsCount > 0) { // In case the first page of results is too small for the window's size
          $(window).scroll();
        }
      },
      'onFiltersLoaded': function(page) {
        $('#report-table').reportTableScroller('adjustTableSize');
        $('#report-table').reportTableScroller('resetScroller');
      },
      spinnerElement: function() {
        spinner = $('<div class="report-overlay" style="height: 60px; width: 100%"></div>')
            .insertAfter($('table#report-table'));
        $('#report-table').reportTableScroller('resetScroller');
        return spinner;
      },
      placeholderElement: function(message) {
        return $('<div class="placeholder-empty-state">'+message+'</div>').insertAfter($('table#report-table'));
      }
    });

    var downloading = false;
    $('.report-link').click(function(){
      if (!downloading){
        downloading = true;
        $.get($(this).data('url'), function(){
          downloading = false;
        });
      }
    })
