= user_new_feature('results_expenses') do
  h5 Getting Started: Expenses Report
  a.close.btn-dismiss-alert.icon.icon-close href="#" title="Dismiss"
  a.video-thumbnail href="#" title="Play Video" data-video="//www.youtube.com/embed/UruoA9fB86M?rel=0" data-width="640" data-height="360"
    img src="#{image_path('video_arrow.png')}" width="70" height="70" /
  .feature-description
    p
      'Keep track of your event and campaign expenses by using the list below. Filter for specific campaigns or events or click the 'export' button to manage your expenses with your own excel file. Click on the video to the left for a quick overview or check out our
      a> href="http://support.brandscopic.com" target="_blank" support site
      | for more in depth info.

- content_for :alerts
  div.collection-list-description
    a.icon-close.pull-right data-dismiss="alert"
    .filter-label

.sidebar#resource-filter-column
  #collection-list-filters

#main.main.with-details-close-bar
  = resource_details_bar("You are viewing Expenses report. Click to close.")
  .tab-content
    #list-view.tab-pane.active
      #list-tools.row-fluid
        .pull-right
          button.btn.download.xlsx-download-link data-url="#{results_expenses_path(format: "xls")}" title="Download" data-disable-with="..."
           span.icon-download
      #expenses-totals
      #expenses-list.resource-list.no-top-margin.without-actions

= render partial: 'help_tutorial'

javascript:
  $('#collection-list-filters').filteredList({
    'source': '#{url_for(controller: 'results/expenses', action: :items)}',
    'filtersUrl': '#{filters_events_path(with_expenses_only: true, apply_to: :results_expenses).html_safe}',
    'listContainer': '#expenses-list',
    'sorting': 'start_at',
    'sorting_dir': 'asc',
    'autoLoad': true,
    'includeCalendars': true,
    'selectDefaultDate': false,
    'ytdDatesRange': '#{current_company.ytd_dates_range}',
    'includeAutoComplete': true,
    'applyTo': 'results_expenses',
    'autoCompletePath': '#{autocomplete_events_path(format: :json)}',
    'defaultParams': [{name: 'status[]', value: 'Active'}],
    'clearFilterParams': [{name: 'status[]', value: 'Active'}],
    'onChange': function(filterBox){
      $(document).trigger('expenses-filter:changed');
    },
    'onItemsLoad': function(response, page){
      if (response.find('div[data-content="totals-results"]').length > 0){
        $('#expenses-totals').html(response.find('div[data-content="totals-results"]').html());
      }
    },
    'onItemsChange': function(response, page){
      if ($('#expenses-list .resource-item').length > 0) {
        $('#list-tools').show();
      } else {
        $('#list-tools').hide();
      }
    }
  });
